; Zilog eZ80 ANSI C Compiler Release 3.4
; -optspeed -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\MAIN.C"
	.assume ADL=1
	SEGMENT BSS
_sintable:
	DS	192
_xstart:
	DS	11520
_canvas_data:
	DS	4802
	SEGMENT DATA
_canvas:
	DW24	_canvas_data
;    1	/* Keep these headers */
;    2	#include <stdbool.h>
;    3	#include <stddef.h>
;    4	#include <stdint.h>
;    5	#include <tice.h>
;    6	
;    7	/* Standard headers (recommended) */
;    8	#include <math.h>
;    9	#include <stdio.h>
;   10	#include <stdlib.h>
;   11	#include <string.h>
;   12	
;   13	#include <graphx.h>
;   14	#include <keypadc.h>
;   15	
;   16	#include "gfx/pal.h" 
;   17	#include "gfx/tileset.h" 
;   18	
;   19	extern void drawFloor(uint8_t angle,int x,int y,uint8_t z,uint8_t* texture); 
;   20	void generateTables(void); 
;   21	
;   22	int sintable[64];
;   23	int xstart[64][60]; 
;   24	
;   25	gfx_UninitedSprite(canvas,80,60); 
	SEGMENT CODE
;   26	
;   27	void main(void) {
_main:
	LD	HL,-13
	CALL	__frameset
;   28		int i,x,y;
;   29		uint8_t z;
;   30		gfx_sprite_t* tex;
;   31		
;   32		//init 
;   33		gfx_Begin(); 
	CALL	_gfx_Begin
;   34		gfx_SetPalette(pal_pal,sizeof_pal_pal,0); 
	LD	BC,0
	PUSH	BC
	LD	BC,512
	PUSH	BC
	LD	BC,_pal_pal
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   35		gfx_ZeroScreen(); 
	CALL	_gfx_ZeroScreen
;   36		gfx_SetDrawBuffer(); 
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   37		
;   38		gfx_SetTextBGColor(0); 
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextBGColor
	POP	BC
;   39		gfx_SetTextTransparentColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextTransparentColor
	POP	BC
;   40		gfx_SetTextFGColor(0xFF); 
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   41		
;   42		canvas->width = 80; 
	LD	IY,(_canvas)
	LD	(IY+0),80
;   43		canvas->height = 60; 
	LD	IY,(_canvas)
	LD	(IY+1),60
;   44	   
;   45		generateTables(); 
	CALL	_generateTables
;   46		
;   47		i = 0; 
	LD	BC,0
	LD	(IX+-3),BC
;   48		x = 0; 
	LD	(IX+-10),BC
;   49		y = 0;
	LD	(IX+-7),BC
;   50		z = 8; 
	LD	(IX+-4),8
;   51		tex = tileset_tile_1;
	LD	BC,_tileset_tile_1_data
	LD	(IX+-13),BC
;   52		
;   53		// main loop 
;   54		kb_Scan();
	CALL	_kb_Scan
;   55		while(!kb_IsDown(kb_KeyClear)){
	JR	L_14
L_15:
;   56			timer_Control = TIMER1_DISABLE;
	LD	HL,15859760
	LD	(HL),0
	INC	HL
	LD	(HL),0
;   57			timer_1_Counter = 0;
	LD	BC,0
	LD	(15859712),BC
	XOR	A,A
	LD	(15859715),A
;   58			timer_Control = TIMER1_ENABLE | TIMER1_CPU | TIMER1_UP;
	LD	HL,15859760
	LD	(HL),1
	INC	HL
	LD	(HL),2
;   59			drawFloor(i,x,y,z,tex->data); 
	LD	IY,(IX+-13)
	PEA	IY+2
	LD	C,(IX+-4)
	LD	B,0
	PUSH	BC
	LD	BC,(IX+-7)
	PUSH	BC
	LD	BC,(IX+-10)
	PUSH	BC
	LD	C,(IX+-3)
	LD	B,0
	PUSH	BC
	CALL	_drawFloor
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   60			timer_Control = TIMER1_DISABLE;
	LD	HL,15859760
	LD	(HL),0
	INC	HL
	LD	(HL),0
;   61			
;   62	
;   63			gfx_ZeroScreen();
	CALL	_gfx_ZeroScreen
;   64			gfx_SetTextXY(10,10); 
	LD	BC,10
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;   65			gfx_PrintUInt(timer_1_Counter,1); 
	LD	BC,1
	PUSH	BC
	LD	BC,(15859712)
	PUSH	BC
	CALL	_gfx_PrintUInt
	POP	BC
	POP	BC
;   66	
;   67			gfx_ScaledSprite_NoClip(canvas,0,240-120,4,2);
	LD	BC,2
	PUSH	BC
	LD	BC,4
	PUSH	BC
	LD	BC,120
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(_canvas)
	PUSH	BC
	CALL	_gfx_ScaledSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   68			
;   69			gfx_SwapDraw(); 
	CALL	_gfx_SwapDraw
;   70			
;   71			if(kb_IsDown(kb_KeyUp)) { 
	LD	A,(16056350)
	AND	A,8
	JR	Z,L_2
;   72				x += 2*sintable[(i+16)&63];
	LD	IY,(IX+-3)
	LD	DE,(IX+-10)
	LEA	HL,IY+16
	LD	A,L
	AND	A,63
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	LD	BC,_sintable
	ADD	HL,BC
	LD	HL,(HL)
	ADD	HL,HL
	ADD	HL,DE
	LD	(IX+-10),HL
;   73				y += 2*sintable[i]; 
	LD	HL,(IX+-3)
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	LD	BC,(IX+-3)
	SBC	HL,BC
	LD	BC,(IX+-7)
	LD	DE,_sintable
	ADD	HL,DE
	LD	HL,(HL)
	ADD	HL,HL
	ADD	HL,BC
	LD	(IX+-7),HL
;   74			}
L_2:
;   75			if(kb_IsDown(kb_KeyDown)) { 
	LD	A,(16056350)
	AND	A,1
	JR	Z,L_4
;   76				x -= 2*sintable[(i+16)&63];
	LD	IY,(IX+-3)
	LEA	HL,IY+16
	LD	A,L
	AND	A,63
	UEXT	HL
	LD	L,A
	LD	BC,HL
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,BC
	LD	BC,_sintable
	ADD	HL,BC
	LD	HL,(HL)
	ADD	HL,HL
	LD	BC,HL
	LD	HL,(IX+-10)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-10),HL
;   77				y -= 2*sintable[i]; 
	LD	HL,(IX+-3)
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	LD	BC,(IX+-3)
	SBC	HL,BC
	LD	BC,_sintable
	ADD	HL,BC
	LD	HL,(HL)
	ADD	HL,HL
	LD	BC,HL
	LD	HL,(IX+-7)
	OR	A,A
	SBC	HL,BC
	LD	(IX+-7),HL
;   78			}
L_4:
;   79			if(kb_IsDown(kb_KeyLeft)) { 
	LD	A,(16056350)
	AND	A,2
	JR	Z,L_6
;   80				i = (i+63)&63; 
	LD	IY,(IX+-3)
	LEA	HL,IY+63
	LD	A,L
	AND	A,63
	UEXT	HL
	LD	L,A
	LD	(IX+-3),HL
;   81			} 
L_6:
;   82			if(kb_IsDown(kb_KeyRight)) { 
	LD	A,(16056350)
	AND	A,4
	JR	Z,L_9
;   83				i = (i+1)&63; 
	LD	HL,(IX+-3)
	INC	HL
	LD	A,L
	AND	A,63
	UEXT	HL
	LD	L,A
	LD	(IX+-3),HL
;   84			}
L_9:
;   85			if(kb_IsDown(kb_KeyAdd)) { 
	LD	A,(16056348)
	AND	A,2
	JR	Z,L_12
;   86				z++; 
	INC	(IX+-4)
;   87			} 
L_12:
;   88			if(kb_IsDown(kb_KeySub)) { 
	LD	A,(16056348)
	AND	A,4
	JR	Z,L_13
;   89				z--; 
	DEC	(IX+-4)
;   90			}
L_13:
;   91			
;   92			kb_Scan();
	CALL	_kb_Scan
;   93		}; 
L_14:
	LD	A,(16056348)
	AND	A,64
	JR	Z,L_15
;   94	   
;   95		// cleanup
;   96		gfx_End(); 
	CALL	_gfx_End
;   97	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_gfx_End                            IMPORT  -----   function
;_sintable                           STATIC    192   variable
;_gfx_SwapDraw                       IMPORT  -----   function
;_gfx_ScaledSprite_NoClip            IMPORT  -----   function
;_gfx_PrintUInt                      IMPORT  -----   function
;_gfx_SetTextXY                      IMPORT  -----   function
;_drawFloor                          IMPORT  -----   function
;_kb_Scan                            IMPORT  -----   function
;_tileset_tile_1_data                IMPORT  unknown variable
;_generateTables                     IMPORT  -----   function
;_canvas                             STATIC      3   variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetTextTransparentColor        IMPORT  -----   function
;_gfx_SetTextBGColor                 IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function
;_pal_pal                            IMPORT    512   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;tex                                  IX-13      3   variable
;x                                    IX-10      3   variable
;y                                     IX-7      3   variable
;z                                     IX-4      1   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 19 (bytes)
;       Spill Code: 0 (instruction)


;   98	
;   99	
;  100	 
;  101	void generateTables() { 
_generateTables:
	LD	HL,-28
	CALL	__frameset
;  102		int i,j; 
;  103	 	
;  104		for(i = 0;i < 64;i++) {
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_21
L_19:
;  105			sintable[i] = 256.0*sin((M_PI/32.0) * i);
	LD	BC,(IX+-3)
	CALL	__itol
	CALL	__ltof
	LD	HL,13176795
	LD	E,61
	CALL	__fmul
	LD	DE,BC
	LD	C,A
	LD	B,0
	PUSH	BC
	PUSH	DE
	CALL	_sin
	POP	BC
	POP	BC
	LD	A,E
	LD	BC,HL
	LD	HL,8388608
	LD	E,67
	CALL	__fmul
	CALL	__ftol
	LD	HL,(IX+-3)
	LD	DE,(IX+-3)
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,DE
	LD	DE,_sintable
	ADD	HL,DE
	LD	(HL),BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  106		}
L_21:
	LD	BC,64
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_19
;  107		
;  108		for(i = 0;i < 60;i++) { 
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_29
L_27:
;  109			for(j = 0;j < 64;j++) {
	LD	BC,0
	LD	(IX+-6),BC
	JR	L_26
L_24:
;  110				xstart[j][i] = (150.37*256*sintable[j]) / (80*(i+1));
	LD	HL,(IX+-6)
	LD	DE,(IX+-6)
	LD	BC,(IX+-3)
	LD	(IX+-12),BC	; spill
	LD	BC,(IX+-6)
	LD	(IX+-15),BC	; spill
	LD	BC,(IX+-6)
	LD	(IX+-18),BC	; spill
	LD	BC,(IX+-6)
	LD	(IX+-21),BC	; spill
	LD	BC,(IX+-3)
	LD	(IX+-24),BC	; spill
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	SBC	HL,DE
	LD	DE,_sintable
	ADD	HL,DE
	LD	BC,(HL)
	LD	HL,1466040
	CALL	__itol
	CALL	__ltof
	LD	E,71
	CALL	__fmul
	LD	(IX+-27),BC
	LD	(IX+-28),A
	LD	BC,(IX+-12)	; unspill
	INC	BC
	LD	(IX+-12),BC	; spill
	LD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(IX+-12)	; unspill
	ADD	HL,BC
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,HL
	CALL	__itol
	CALL	__ltof
	LD	E,A
	LD	A,(IX+-28)
	LD	HL,BC
	LD	BC,(IX+-27)
	CALL	__fdiv
	CALL	__ftol
	LD	HL,(IX+-6)
	ADD	HL,HL
	LD	(IX+-9),BC	; spill
	LD	BC,(IX+-15)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-9)	; unspill
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	LD	(IX+-9),BC	; spill
	LD	BC,(IX+-18)	; unspill
	SBC	HL,BC
	LD	BC,(IX+-9)	; unspill
	ADD	HL,HL
	ADD	HL,HL
	LD	(IX+-9),BC	; spill
	LD	BC,(IX+-21)	; unspill
	ADD	HL,BC
	LD	BC,(IX+-9)	; unspill
	ADD	HL,HL
	ADD	HL,HL
	LD	DE,_xstart
	ADD	HL,DE
	LD	DE,HL
	LD	HL,(IX+-3)
	ADD	HL,HL
	ADD	HL,HL
	OR	A,A
	LD	(IX+-9),BC	; spill
	LD	BC,(IX+-24)	; unspill
	SBC	HL,BC
	LD	BC,(IX+-9)	; unspill
	ADD	HL,DE
	LD	(HL),BC
	LD	BC,(IX+-6)
	INC	BC
	LD	(IX+-6),BC
;  111			} 
L_26:
	LD	BC,64
	LD	HL,(IX+-6)
	OR	A,A
	SBC	HL,BC
	JP	M,L__11
	JP	PE,L_24
	JR	L__12
L__11:
	JP	PO,L_24
L__12:
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  112		} 
L_29:
	LD	BC,60
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L__13
	JP	PE,L_27
	JR	L__14
L__13:
	JP	PO,L_27
L__14:
;  113	
;  114	} 
	LD	SP,IX
	POP	IX
	RET	


;**************************** _generateTables ***************************
;Name                         Addr/Register   Size   Type
;_xstart                             STATIC  11520   variable
;_sintable                           STATIC    192   variable
;_sin                                IMPORT  -----   function
;j                                     IX-6      3   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 34 (bytes)
;       Spill Code: -1 (instruction)


	XREF _drawFloor:ROM
	XREF _tileset_tile_1_data:ROM
	XREF _pal_pal:ROM
	XREF _kb_Scan:ROM
	XREF _gfx_ScaledSprite_NoClip:ROM
	XREF _gfx_SetTextTransparentColor:ROM
	XREF _gfx_SetTextBGColor:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_SetTextXY:ROM
	XREF _gfx_PrintUInt:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_ZeroScreen:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _sin:ROM
	XREF __fmul:ROM
	XREF __fdiv:ROM
	XREF __ftol:ROM
	XREF __ltof:ROM
	XREF __itol:ROM
	XREF __frameset:ROM
	XDEF _generateTables
	XDEF _main
	XDEF _canvas
	XDEF _canvas_data
	XDEF _xstart
	XDEF _sintable
	END
